/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(nop_latency_source.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(88816d751ad6b5d5ae4bc1309150685a)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <bench/nop_latency_source.h>
// pydoc.h is automatically generated in the build directory
#include <nop_latency_source_pydoc.h>

void bind_nop_latency_source(py::module& m)
{

    using nop_latency_source = ::gr::bench::nop_latency_source;


    py::class_<nop_latency_source,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<nop_latency_source>>(
        m, "nop_latency_source", D(nop_latency_source))

        .def(py::init(&nop_latency_source::make),
             py::arg("sizeof_stream_item"),
             py::arg("timestamp_pathname"),
             py::arg("period"),
             py::arg("offset") = 0,
             py::arg("nproduce") = 0,
             D(nop_latency_source, make))


        ;
}
