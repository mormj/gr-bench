/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(latency_meas_sink.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(64bf78f106e807ead813a804164485fe)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <bench/latency_meas_sink.h>
// pydoc.h is automatically generated in the build directory
#include <latency_meas_sink_pydoc.h>

void bind_latency_meas_sink(py::module& m)
{

    using latency_meas_sink    = ::gr::bench::latency_meas_sink;


    py::class_<latency_meas_sink, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<latency_meas_sink>>(m, "latency_meas_sink", D(latency_meas_sink))

        .def(py::init(&latency_meas_sink::make),
           py::arg("samp_rate"),
           py::arg("blocking") = true,
           D(latency_meas_sink,make)
        )
        




        
        .def("avg_latency",&latency_meas_sink::avg_latency,       
            D(latency_meas_sink,avg_latency)
        )


        
        .def("latency_samples",&latency_meas_sink::latency_samples,       
            D(latency_meas_sink,latency_samples)
        )

        ;




}








