id: bench_nop_head
label: NOP Head
category: '[bench]'
flags: [ python, cpp ]

parameters:
-   id: type
    label: Type
    dtype: enum
    options: [complex, float, int, short, byte]
    option_attributes:
        size: [gr.sizeof_gr_complex, gr.sizeof_float, gr.sizeof_int, gr.sizeof_short,
            gr.sizeof_char]
    hide: part
-   id: num_items
    label: Num Items
    dtype: int
    default: '1024'
-   id: vlen
    label: Vec Length
    dtype: int
    default: '1'
    hide: ${ 'part' if vlen == 1 else 'none' }

inputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ vlen }

outputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ vlen }

asserts:
- ${ vlen > 0 }

templates:
    imports: import bench
    make: bench.nop_head(${type.size}*${vlen}, ${num_items})
    callbacks:
    - set_length(${num_items})

cpp_templates:
    includes: ['#include <gnuradio/bench/nop_head.h>']
    declarations: 'bench::nop_head::sptr ${id};'
    make: 'this->${id} = bench::nop_head::make(${type.size}*${vlen}, ${num_items});'
    callbacks:
    - set_length(${num_items})

file_format: 1